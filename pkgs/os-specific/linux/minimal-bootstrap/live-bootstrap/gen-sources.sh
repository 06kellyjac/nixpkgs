#!/usr/bin/env nix-shell
#!nix-shell -i bash -p bash coreutils nix jq

# Generate a sources.nix for a version of live-bootstrap. Creates lists of shas
# for files the FILES array below.
#
# ./gen-sources.sh > ./new-sources.nix

set -eu
cd "$(dirname "${BASH_SOURCE[0]}")"

PNAME="live-bootstrap"

build_url() {
  export COMMIT=$1
  echo "https://github.com/fosslinux/$PNAME/archive/$COMMIT.tar.gz"
}

prefetch() {
  export commit=$1
  # keep name inline with the fetcher so they're found in the store rather than re-fetched
  # doesn't affect getting the right sha
  nix-prefetch-url $(build_url $commit) --type sha256 --name "$PNAME-$commit"
}

OUT="$(NIXPKGS_ALLOW_UNSUPPORTED_SYSTEM=1 nix-instantiate --eval --strict --json ./gen-sources.nix)"

COMMITS=($(echo "$OUT" | jq 'keys[]' -r | sort))

add_files() {
  export out=$1
  export commit=$2
  FILES=($(echo "$out" | jq --arg ID "$commit" '.[$ID].files[]' -r | sort))
  for file in "${FILES[@]}"; do
    echo "      \"$file\""
  done
}

cat <<EOF
# This file is generated by ./gen-sources.sh.
# Do not edit!
{
EOF
for commit in "${COMMITS[@]}"; do
  cat <<EOF
  "$commit" = {
    files = [
$(add_files "$OUT" $commit)
    ];
    sha256 = "$(prefetch $commit)";
  };
EOF
done
cat <<EOF
}
EOF
