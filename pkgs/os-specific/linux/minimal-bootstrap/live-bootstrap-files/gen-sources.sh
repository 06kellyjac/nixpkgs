#!/usr/bin/env nix-shell
#!nix-shell -i bash -p bash coreutils gnutar nix

# Generate a sources.nix for a version of live-bootstrap. Creates lists of shas
# for files the FILES array below.
#
# ./gen-sources.sh > ./new-sources.nix

set -eu

PNAME="live-bootstrap"
TARGET_COMMIT="1bc4296091c51f53a5598050c8956d16e945b0f5"
FILES=(
  "sysa/gzip-1.2.4/files/stat_override.c"
  "sysa/gzip-1.2.4/mk/main.mk"

  "sysa/sed-4.0.9/mk/main.mk"

  "sysa/tar-1.12/mk/main.mk"
  "sysa/tar-1.12/files/getdate_stub.c"
  "sysa/tar-1.12/files/stat_override.c"

  "sysa/bash-2.05b/mk/main.mk"
  "sysa/bash-2.05b/mk/common.mk"
  "sysa/bash-2.05b/mk/builtins.mk"
  "sysa/bash-2.05b/patches/mes-libc.patch"
  "sysa/bash-2.05b/patches/tinycc.patch"
  "sysa/bash-2.05b/patches/missing-defines.patch"
  "sysa/bash-2.05b/patches/locale.patch"
  "sysa/bash-2.05b/patches/dev-tty.patch"

  # "sysa/coreutils-5.0/mk/main.mk"
  # "sysa/coreutils-5.0/patches/modechange.patch"
  # "sysa/coreutils-5.0/patches/mbstate.patch"
  # "sysa/coreutils-5.0/patches/ls-strcmp.patch"
  # "sysa/coreutils-5.0/patches/touch-getdate.patch"
  # "sysa/coreutils-5.0/patches/touch-dereference.patch"
  # "sysa/coreutils-5.0/patches/expr-strcmp.patch"
  # "sysa/coreutils-5.0/patches/sort-locale.patch"

  "sysa/flex-2.5.11/mk/main.mk"
  "sysa/flex-2.5.11/files/scan.lex.l"
  "sysa/flex-2.5.11/patches/scan_l.patch"
  "sysa/flex-2.5.11/patches/yyin.patch"
)
IFS=$'\n' SORTED_FILES=($(sort <<<"${FILES[*]}"))
unset IFS

file_url() {
  export FILE=$1
  echo "https://github.com/fosslinux/$PNAME/raw/$TARGET_COMMIT/$FILE"
}

file_name_to_fetched_name() {
  export file_name=$1
  # prefix & replace / in file_name with -
  echo "$PNAME-$TARGET_COMMIT-$(echo $file_name | sed 's#/#-#g')"
}

prefetch() {
  export file_name=$1
  # keep name inline with the fetcher so they're found in the store rather than re-fetched
  # doesn't affect getting the right sha
  nix-prefetch-url $(file_url $file_name) --type sha256 --name $(file_name_to_fetched_name $file_name)
}

cat <<EOF
# This file is generated by ./gen-sources.sh.
# Do not edit!
{
  targetCommit = "$TARGET_COMMIT";
  files = {
EOF
for file in "${SORTED_FILES[@]}"; do
  cat <<EOF
    "$file" = "$(prefetch $file)";
EOF
done
cat <<EOF
  };
}
EOF
